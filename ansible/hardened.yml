---
- name: Durcissement CIS avec gestion des utilisateurs et services
  hosts: node1
  become: yes

  tasks:
    - name: ===== Début du playbook  Durcissement CIS =====
      debug:
        msg: "Déploiement commencé : Durcissement CIS avec gestion des utilisateurs et services."

    - name: ===== Bloc 1  Gestion des utilisateurs et sudo =====
      debug:
        msg: "Configuration des utilisateurs et du groupe sudo."

    - name: Créer un utilisateur administrateur "debian"
      user:
        name: debian
        password: "{{ 'debian' | password_hash('sha512') }}"
        shell: /bin/bash
        groups: sudo
        append: yes
        state: present
      tags:
        - users
        - critical

    - name: Configurer sudo pour demander un mot de passe
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: '^Defaults\s+.*!authenticate'
        line: "Defaults    authenticate"
        state: present
        validate: "/usr/sbin/visudo -cf %s"
      tags:
        - sudo
        - critical

    - name: Renforcer la configuration sudo (requiretty)
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: '^Defaults\s+.*requiretty'
        line: "Defaults    requiretty"
        state: present
        validate: "/usr/sbin/visudo -cf %s"
      tags:
        - sudo

    - name: ===== Bloc 2  Installation des packages =====
      debug:
        msg: "Installation des packages nécessaires."

    - name: Installer les packages requis pour le durcissement et les utilitaires
      package:
        name:
          - libpam-pwquality
          - fail2ban
          - ufw
          - vim
          - curl
          - wget
          - htop
          - net-tools
          - logrotate
          - libpam-modules
          - libpam-modules-bin
          - lynis
          - aide
        state: present
      tags:
        - packages
        - critical

    - name: ===== Bloc 3  Gestion des mots de passe =====
      debug:
        msg: "Configuration des politiques et expirations des mots de passe."

    - name: Configurer la politique de mots de passe
      ansible.builtin.blockinfile:
        path: /etc/security/pwquality.conf
        block: |
          # Configuration renforcée des mots de passe
          minlen = 14
          minclass = 4
        marker: "# {mark} ANSIBLE MANAGED BLOCK - PASSWORD POLICY"
      tags:
        - passwords
        - security

    - name: Configurer les expirations des mots de passe
      ansible.builtin.blockinfile:
        path: /etc/login.defs
        block: |
          # Configuration des expirations de mots de passe
          PASS_MAX_DAYS 90
          PASS_MIN_DAYS 7
          PASS_WARN_AGE 14
        marker: "# {mark} ANSIBLE MANAGED BLOCK - PASSWORD EXPIRATION"
      tags:
        - passwords
        - security

    - name: ===== Bloc 4  Configuration du pare-feu UFW =====
      debug:
        msg: "Activation et configuration du pare-feu UFW."

    - name: Activer UFW avec des règles par défaut
      ufw:
        state: enabled
        policy: deny
        direction: incoming
      tags:
        - firewall
        - critical

    - name: Autoriser les connexions SSH via UFW
      ufw:
        rule: allow
        port: 22
        proto: tcp
      tags:
        - firewall
        - ssh

    - name: ===== Bloc 5  Configuration de Fail2Ban =====
      debug:
        msg: "Configuration de Fail2Ban pour sécuriser SSH et les connexions."

    - name: Configurer Fail2Ban via jail.local
      ansible.builtin.blockinfile:
        path: /etc/fail2ban/jail.local
        create: yes
        block: |
          [DEFAULT]
          bantime = 3600
          findtime = 600
          maxretry = 5
          ignoreip = 127.0.0.1/8

          [sshd]
          enabled = true
          port = ssh
          logpath = /var/log/auth.log
          action = %(action_mwl)s
        marker: "# {mark} ANSIBLE MANAGED BLOCK - FAIL2BAN CONFIGURATION"
      notify:
        - Restart Fail2Ban
      tags:
        - fail2ban
        - security

    - name: ===== Bloc 6  Configuration de la rotation des logs =====
      debug:
        msg: "Mise en place de la rotation des logs système."

    - name: Configurer la rotation des logs avec blockinfile
      ansible.builtin.blockinfile:
        path: /etc/logrotate.d/auth
        create: yes
        block: |
          /var/log/auth.log {
              su root adm
              rotate 7
              daily
              missingok
              compress
              delaycompress
              notifempty
              create 640 syslog adm
          }
        marker: "# {mark} ANSIBLE MANAGED BLOCK - LOGROTATE CONFIGURATION"
      tags:
        - logs
        - maintenance

    - name: ===== Bloc 7  Durcissement des paramètres kernel =====
      debug:
        msg: "Application des paramètres sysctl pour renforcer la sécurité kernel."

    - name: Configurer les paramètres sysctl
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: "net.ipv4.icmp_echo_ignore_all", value: "1" }
        - { name: "net.ipv4.tcp_syncookies", value: "1" }
        - { name: "net.ipv4.ip_forward", value: "0" }
      tags:
        - kernel
        - security

    - name: ===== Bloc 8  Configuration du module PAM =====
      debug:
        msg: "Configuration de PAM pour limiter les tentatives de connexion."

    - name: Configurer pam_faillock pour limiter les tentatives de connexion
      ansible.builtin.blockinfile:
        path: /etc/security/faillock.conf
        create: yes
        block: |
          deny = 5
          unlock_time = 900
          fail_interval = 300
        marker: "# {mark} ANSIBLE MANAGED BLOCK - PAM FAILLOCK CONFIG"
      tags:
        - pam
        - security

    - name: ===== Bloc 9  Configuration d'AIDE =====
      debug:
        msg: "Configuration d'AIDE pour surveiller les fichiers critiques."

    - name: Initialiser la base de données AIDE
      command: aideinit
      args:
        creates: /var/lib/aide/aide.db.new
      tags:
        - aide
        - security

    - name: ===== Bloc 10  Audit de sécurité avec Lynis =====
      debug:
        msg: "Exécution d'un audit de sécurité avec Lynis."

    - name: Exécuter un audit système avec Lynis
      command: lynis audit system
      register: lynis_output
      ignore_errors: true
      tags:
        - lynis
        - audit

    - name: ===== Bloc 11  Sécurisation des services SSH =====
      debug:
        msg: "Sécurisation de la configuration SSH."

    - name: Configurer SSH de manière sécurisée
      ansible.builtin.blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          # Sécurisation SSH
          PermitRootLogin no
          Protocol 2
          AllowUsers debian
          ClientAliveInterval 300
          GSSAPIAuthentication no
          X11Forwarding no
          ClientAliveCountMax 3
        marker: "# {mark} ANSIBLE MANAGED BLOCK - SSH SECURITY"
      notify:
        - Redémarrer le service SSH
      tags:
        - ssh
        - security

    - name: ===== Fin du playbook =====
      debug:
        msg: "Le déploiement du playbook est terminé avec succès !"

  handlers:
    - name: Restart Fail2Ban
      service:
        name: fail2ban
        state: restarted
      tags:
        - fail2ban
        - service-restart

    - name: Redémarrer le service SSH
      service:
        name: sshd
        state: restarted
      tags:
        - ssh
        - service-restart
