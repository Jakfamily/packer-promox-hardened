---
# Rôle : auditd
# ## Description
# Ce rôle installe et configure auditd pour la surveillance des événements système critiques.
#
# ## Références aux benchmarks de sécurité :
# 1. **CIS (Center for Internet Security)** :
#    - **Recommandation 4.1.1** : Installation et activation d'auditd pour surveiller les événements système.
#    - **Recommandation 4.1.2** : Configuration de règles spécifiques pour collecter des événements critiques.
#    - **Lien direct vers CIS Benchmarks** : [https://downloads.cisecurity.org/#/](https://downloads.cisecurity.org/#/) *(Connexion requise)*
#
# 2. **ANSSI (Agence Nationale de la Sécurité des Systèmes d'Information)** :
#    - **Recommandation R41** : Journalisation des événements sensibles pour garantir la traçabilité.
#    - **Recommandation R42** : Activation du service d'audit dès le démarrage du système.
#    - **Guide Hygiène Informatique (ANSSI)** : [https://www.ssi.gouv.fr/uploads/IMG/pdf/guide_hygiene_informatique_anssi.pdf](https://www.ssi.gouv.fr/uploads/IMG/pdf/guide_hygiene_informatique_anssi.pdf)
#    - **Guide Sécurisation Linux (ANSSI)** : [https://www.ssi.gouv.fr/uploads/IMG/pdf/anssi-guide_linux.pdf](https://www.ssi.gouv.fr/uploads/IMG/pdf/anssi-guide_linux.pdf)
#
# ## Fonctionnalités
# - Installation d'auditd et des plugins nécessaires.
# - Configuration de l'audit au démarrage via GRUB.
# - Application de règles pour surveiller :
#   - Les modifications des fichiers sensibles.
#   - Les connexions et déconnexions.
#   - Les tentatives d'accès non autorisées.
#   - Les changements au niveau du réseau ou des permissions.
# - Configuration de journald pour une journalisation persistante.
# - Gestion des logs avec notification et arrêt en cas de saturation.
#
# ## Variables configurables
# ### Configuration générale d'auditd
# - `auditd_config.max_log_file_action` : Action lorsque la taille max des journaux est atteinte (par défaut : `keep_logs`).
# - `auditd_config.space_left_action` : Action en cas de faible espace disque (par défaut : `email`).
# - `auditd_config.action_mail_acct` : Adresse email pour les notifications (par défaut : `root`).
# - `auditd_config.admin_space_left_action` : Action lorsque l'espace disque est critique (par défaut : `halt`).
#
# ### Règles d'audit
# - Liste des règles personnalisées à appliquer dans `/etc/audit/rules.d/`.
#   Exemple :
#   - Collecter les événements de modification de date et heure.
#   - Collecter les connexions/déconnexions.
#   - Collecter les tentatives d'accès non autorisées.
#
# ## Notes
# - Les fichiers générés incluent `{{ ansible_managed }}` pour indiquer qu'ils sont sous gestion Ansible.
# - Toute modification manuelle sera écrasée lors des prochaines exécutions d'Ansible.

# Installer auditd et ses plugins
- name: Installer auditd
  ansible.builtin.package:
    name:
      - auditd
      - audispd-plugins
    state: present
  tags:
    - auditd
    - installation

# Vérifier que le dossier des règles auditd existe
- name: Vérifier que le dossier des règles auditd existe
  ansible.builtin.file:
    path: /etc/audit/rules.d/
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - auditd
    - security

# Activer l'audit dans GRUB
- name: Activer l'audit dans GRUB
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX=.*'
    line: 'GRUB_CMDLINE_LINUX="audit=1 audit_backlog_limit=8192"'
  notify: Mettre à jour GRUB
  tags:
    - auditd
    - configuration

- name: Mettre à jour GRUB
  ansible.builtin.command:
    cmd: update-grub
  tags:
    - auditd
    - configuration

# Vérifier si auditd est actif et le démarrer si nécessaire
- name: Vérifier si auditd est actif
  ansible.builtin.command:
    cmd: "systemctl is-active auditd"
  register: auditd_status
  changed_when: false
  failed_when: auditd_status.rc not in [0, 3]

- name: Démarrer auditd si nécessaire
  ansible.builtin.service:
    name: auditd
    state: started
  when: auditd_status.rc == 3

# Configurer auditd.conf
- name: Configurer auditd.conf
  ansible.builtin.copy:
    dest: /etc/audit/auditd.conf
    content: |
      # {{ ansible_managed }}
      max_log_file_action = {{ auditd_config.max_log_file_action }}
      space_left_action = {{ auditd_config.space_left_action }}
      action_mail_acct = {{ auditd_config.action_mail_acct }}
      admin_space_left_action = {{ auditd_config.admin_space_left_action }}
      space_left = {{ auditd_config.space_left | default('100M') }}
      admin_space_left = {{ auditd_config.admin_space_left | default('50M') }}
    owner: root
    group: root
    mode: '0640'
  tags:
    - auditd
    - configuration

# Configurer les règles d'audit
- name: Configurer les règles d'audit
  ansible.builtin.copy:
    dest: "/etc/audit/rules.d/{{ item.comment | regex_replace('[^a-zA-Z0-9_]', '') | replace(' ', '_') | lower }}.rules"
    content: |
      # {{ ansible_managed }}
      {% for rule in item.rules %}
      {{ rule }}
      {% endfor %}
    owner: root
    group: root
    mode: '0600'
  loop: "{{ auditd_rules }}"
  loop_control:
    label: "{{ item.comment }}"
  tags:
    - auditd
    - rules

# Tester chaque règle individuellement
- name: Tester chaque règle d'audit individuellement
  ansible.builtin.command:
    cmd: "auditctl {{ item }}"
  loop: "{{ auditd_rules | map(attribute='rules') | flatten }}"
  ignore_errors: true
  register: auditd_rule_check

- name: Vérifier les erreurs de règles d'audit
  debug:
    msg: "Erreur dans la règle : {{ item.item }} -> {{ item.stderr }}"
  loop: "{{ auditd_rule_check.results }}"
  when: item.rc != 0

# Appliquer les nouvelles règles si elles sont valides
- name: Appliquer les nouvelles règles auditd sans redémarrer
  ansible.builtin.command:
    cmd: "auditctl -R /etc/audit/rules.d/"
  when: auditd_rule_check.failed is not defined or not auditd_rule_check.failed
  changed_when: true
  tags:
    - auditd
    - reload
