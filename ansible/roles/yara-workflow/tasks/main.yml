---
# R√¥le : yara-workflow
# ## Documentation des recommandations (CIS, ANSSI, DISA STIG)
#
# üîπ CIS Benchmarks
# - **10.1** : S'assurer que des outils de d√©tection de logiciels malveillants sont install√©s et activ√©s.
# - **10.2** : Mettre √† jour r√©guli√®rement les bases de signatures de logiciels malveillants.
# - **10.4** : Planifier des analyses r√©guli√®res pour identifier les menaces.
# üëâ R√©f√©rence : https://www.cisecurity.org/cis-benchmarks
#
# üîπ ANSSI (Agence Nationale de la S√©curit√© des Syst√®mes d'Information)
# - **6.1.2** : D√©ployer des outils pour d√©tecter des fichiers malveillants √† l'aide de signatures connues.
# - **6.4.1** : Automatiser les analyses pour r√©duire les risques li√©s aux erreurs humaines.
# - **6.6.1** : Centraliser les r√®gles et les rapports dans des r√©pertoires s√©curis√©s.
# üëâ R√©f√©rence : https://www.ssi.gouv.fr/guide/
#
# üîπ DISA STIG (Defense Information Systems Agency)
# - **V-230418** : Impl√©menter un syst√®me d‚Äôanalyse automatis√© pour d√©tecter les logiciels malveillants.
# - **V-230419** : Planifier des analyses r√©guli√®res des fichiers syst√®mes (cron ou autre).
# - **V-230420** : Maintenir les bases de signatures √† jour pour garantir leur efficacit√©.
# üëâ R√©f√©rence : https://public.cyber.mil/stigs/
#
# ## Fonctionnalit√©s
# - Installation de YARA pour la d√©tection des fichiers malveillants.
# - Gestion des r√®gles YARA (fichier local inclus dans le r√¥le).
# - Planification des analyses r√©guli√®res avec `cron`.
# - Centralisation des r√®gles et des journaux dans des r√©pertoires s√©curis√©s.

# Installer les d√©pendances n√©cessaires
- name: Installer les d√©pendances pour YARA
  ansible.builtin.apt:
    name: "{{ yara_dependencies }}"
    state: present
  tags:
    - yara
    - dependencies

# Copier les r√®gles YARA depuis le dossier du r√¥le
- name: Copier les r√®gles YARA vers le r√©pertoire cible
  ansible.builtin.copy:
    src: "rules/yara-rules-full.yar"
    dest: "{{ yara_rules_path }}/yara-rules-full.yar"
    owner: root
    group: root
    mode: "0644"
  tags:
    - yara
    - rules

# V√©rifier les r√®gles YARA
- name: V√©rifier les r√®gles YARA
  ansible.builtin.command:
    cmd: "yara -r {{ yara_rules_path }}/yara-rules-full.yar {{ yara_scan_target }}"
  register: yara_verify
  changed_when: false
  tags:
    - yara
    - verify

- name: Afficher les r√©sultats de la v√©rification
  ansible.builtin.debug:
    var: yara_verify.stdout
  tags:
    - yara
    - verify

# Planifier une analyse automatique YARA
- name: Planifier une analyse YARA quotidienne
  ansible.builtin.cron:
    name: "Analyse quotidienne YARA"
    minute: "{{ yara_cron_minute }}"
    hour: "{{ yara_cron_hour }}"
    job: "yara -r {{ yara_rules_path }}/yara-rules-full.yar {{ yara_scan_target }} > /var/log/yara_scan.log 2>&1"
  tags:
    - yara
    - cron

# Ex√©cuter une analyse YARA
- name: Ex√©cuter une analyse YARA
  ansible.builtin.command:
    cmd: "yara -r {{ yara_rules_path }}/yara-rules-full.yar {{ yara_scan_target }}"
  register: yara_scan
  changed_when: false
  tags:
    - yara
    - scan

- name: Afficher les r√©sultats de l'analyse
  ansible.builtin.debug:
    var: yara_scan.stdout
  tags:
    - yara
    - scan
