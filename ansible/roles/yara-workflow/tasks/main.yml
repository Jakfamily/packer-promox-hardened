---
# ### Documentation des recommandations (CIS, ANSSI, DISA STIG)
#
# ðŸ”¹ CIS Benchmarks
# - **10.1** : S'assurer que des outils de dÃ©tection de logiciels malveillants sont installÃ©s et activÃ©s.
# - **10.2** : Mettre Ã  jour rÃ©guliÃ¨rement les bases de signatures de logiciels malveillants.
# - **10.4** : Planifier des analyses rÃ©guliÃ¨res pour identifier les menaces.
# ðŸ‘‰ RÃ©fÃ©rence : https://www.cisecurity.org/cis-benchmarks
#
# ðŸ”¹ ANSSI (Agence Nationale de la SÃ©curitÃ© des SystÃ¨mes d'Information)
# - **6.1.2** : DÃ©ployer des outils pour dÃ©tecter des fichiers malveillants Ã  l'aide de signatures connues.
# - **6.4.1** : Automatiser les analyses pour rÃ©duire les risques liÃ©s aux erreurs humaines.
# - **6.6.1** : Centraliser les rÃ¨gles et les rapports dans des rÃ©pertoires sÃ©curisÃ©s.
# ðŸ‘‰ RÃ©fÃ©rence : https://www.ssi.gouv.fr/guide/
#
# ðŸ”¹ DISA STIG (Defense Information Systems Agency)
# - **V-230418** : ImplÃ©menter un systÃ¨me dâ€™analyse automatisÃ© pour dÃ©tecter les logiciels malveillants.
# - **V-230419** : Planifier des analyses rÃ©guliÃ¨res des fichiers systÃ¨mes (cron ou autre).
# - **V-230420** : Maintenir les bases de signatures Ã  jour pour garantir leur efficacitÃ©.
# ðŸ‘‰ RÃ©fÃ©rence : https://public.cyber.mil/stigs/
#
# Ce rÃ´le implÃ©mente les recommandations ci-dessus en :
# 1. Installant YARA pour la dÃ©tection des fichiers malveillants.
# 2. TÃ©lÃ©chargeant automatiquement les rÃ¨gles depuis YARAForge.
# 3. Planifiant des analyses rÃ©guliÃ¨res grÃ¢ce au module `cron`.
# 4. Centralisant les rÃ¨gles et logs dans des rÃ©pertoires sÃ©curisÃ©s.

  - name: Install dependencies for YARA compilation
    ansible.builtin.apt:
      name: "{{ yara_dependencies }}"
      state: present

  - name: Clone YARA repository
    ansible.builtin.git:
      repo: 'https://github.com/VirusTotal/yara.git'
      dest: '/opt/yara'
      version: master

  - name: Compile and install YARA
    ansible.builtin.shell:
      cmd: |
        ./bootstrap.sh
        ./configure
        make
        make install
      chdir: /opt/yara

  - name: Download YARAForge rules pack
    ansible.builtin.get_url:
      url: "{{ yara_rules_url }}"
      dest: "/tmp/yara-forge-rules.zip"
      mode: "0644"

  - name: Extract YARAForge rules
    ansible.builtin.unarchive:
      src: "/tmp/yara-forge-rules.zip"
      dest: "{{ yara_rules_path }}"
      remote_src: yes

  - name: Verify YARA rules
    ansible.builtin.command:
      cmd: "yara -r {{ yara_rules_path }}"
    register: yara_verify
    changed_when: false

  - name: Display verification results
    ansible.builtin.debug:
      var: yara_verify.stdout

  - name: Run automatic YARA scan
    ansible.builtin.command:
      cmd: "yara -r {{ yara_rules_path }} {{ yara_scan_target }}"
    register: yara_scan
    changed_when: false

  - name: Display scan results
    ansible.builtin.debug:
      var: yara_scan.stdout

  - name: Schedule YARA scan (cron job)
    ansible.builtin.cron:
      name: "Daily YARA scan"
      minute: "{{ yara_cron_minute }}"
      hour: "{{ yara_cron_hour }}"
      job: "yara -r {{ yara_rules_path }} {{ yara_scan_target }} > /var/log/yara_scan.log 2>&1"
