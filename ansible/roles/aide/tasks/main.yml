---
# Rôle : aide
#
# ## Description
# Ce rôle gère l'installation, la configuration et la planification d'AIDE (Advanced Intrusion Detection Environment).
# AIDE est utilisé pour vérifier l'intégrité des fichiers critiques et détecter les modifications non autorisées.
#
# ## Pourquoi utiliser AIDE ?
# AIDE est recommandé par plusieurs benchmarks de sécurité pour renforcer la sécurité des systèmes.
#
# ### Références aux benchmarks de sécurité :
# 1. **CIS (Center for Internet Security)**
#    - **Recommandation 1.3.2** : Configurer un système de surveillance de l'intégrité des fichiers.
#    - [Lien direct vers CIS Benchmarks](https://downloads.cisecurity.org/#/) *(Connexion requise)*
#
# 2. **ANSSI (Agence Nationale de la Sécurité des Systèmes d'Information)**
#    - **Recommandation R40** : Mettre en place un système de détection des altérations des fichiers critiques.
#    - [Lien direct vers ANSSI R40](https://www.ssi.gouv.fr/uploads/IMG/pdf/anssi-guide_linux.pdf) *(Page 52)*
#
# ## Fonctionnalités du rôle
# - Installation minimale d'AIDE pour respecter les principes de sécurité.
# - Initialisation de la base de données avec `aide --init`.
# - Configuration d'un scan hebdomadaire planifié via `cron`.
# - Journalisation des résultats pour audit dans `/var/log/audit_execution.log`.
#
# ## Variables configurables :
# - `aide_db_path` : Chemin de la base de données AIDE (par défaut : `/var/lib/aide/aide.db`).
# - `aide_scan_command` : Commande utilisée pour exécuter le scan (par défaut : `/usr/bin/aide --check`).
# - `aide_cron_minute` : Minute d'exécution du cron (par défaut : `0`).
# - `aide_cron_hour` : Heure d'exécution du cron (par défaut : `3`).
# - `aide_cron_weekday` : Jour d'exécution du cron (par défaut : `0`, dimanche).
#
# ## Références utiles :
# - [Documentation officielle d'AIDE](https://aide.github.io/)
# - [CIS Benchmarks - Linux](https://downloads.cisecurity.org/#/) *(Recommandation 1.3.2)*
# - [ANSSI - Sécurité des systèmes Linux](https://www.ssi.gouv.fr/uploads/IMG/pdf/anssi-guide_linux.pdf) *(Recommandation R40)*

- name: Installer AIDE
  ansible.builtin.package:
    name: aide
    state: present
  tags:
    - aide
    - installation

- name: Initialiser la base de données AIDE si nécessaire
  command: aide --init
  args:
    creates: "{{ aide_db_new_path }}"
  register: aide_init
  changed_when: true
  ignore_errors: true
  tags:
    - aide
    - security

- name: Copier la nouvelle base de données AIDE si elle existe
  command: cp "{{ aide_db_new_path }}" "{{ aide_db_path }}"
  when: aide_init is changed
  tags:
    - aide
    - security

- name: Vérifier si AIDE est déjà configuré
  stat:
    path: "{{ aide_db_path }}"
  register: aide_config
  tags:
    - aide
    - validation

- name: Exécuter un scan initial avec AIDE si la configuration est présente
  shell: "{{ aide_scan_command }} > {{ aide_log_file }} 2>&1"
  register: aide_scan
  when: aide_config.stat.exists
  failed_when: false
  changed_when: false
  tags:
    - aide
    - audit

- name: Enregistrer l'exécution du scan initial dans le log global
  lineinfile:
    path: /var/log/audit_execution.log
    create: yes
    line: "[{{ ansible_date_time.date }} {{ ansible_date_time.time }}] Scan initial AIDE exécuté avec succès."
  when: aide_scan is defined and aide_scan.rc == 0
  tags:
    - aide
    - logging

- name: Planifier un scan AIDE hebdomadaire
  cron:
    name: "Scan AIDE hebdomadaire"
    user: root
    minute: "{{ aide_cron_minute }}"
    hour: "{{ aide_cron_hour }}"
    weekday: "{{ aide_cron_weekday }}"
    job: "{{ aide_scan_command }} >> {{ aide_history_log }} 2>&1 && echo '[`date`] Scan hebdomadaire AIDE exécuté avec succès.' >> /var/log/audit_execution.log"
  tags:
    - cron
    - aide
