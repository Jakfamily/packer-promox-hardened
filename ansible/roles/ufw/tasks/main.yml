---
# Rôle : firewall

## Description
# Ce rôle installe et configure UFW (Uncomplicated Firewall) pour sécuriser les connexions entrantes et sortantes.
# Il applique les recommandations des benchmarks de sécurité **CIS**, **ANSSI**, et **DISA STIG**.

## Références aux benchmarks de sécurité :
# 1. **CIS (Center for Internet Security)** :
#    - **3.5.1** : Activer un pare-feu pour protéger les connexions entrantes et sortantes.
#    - **3.5.2** : Configurer un pare-feu pour bloquer tout le trafic non autorisé.
#    - **3.5.3** : Autoriser uniquement les services nécessaires (ex. SSH, DNS, HTTP).
#
# 2. **ANSSI (Agence Nationale de la Sécurité des Systèmes d'Information)** :
#    - **R87** : Configurer un pare-feu pour bloquer les connexions non autorisées.
#    - **R88** : Activer la gestion des connexions IPv6.
#    - **R89** : Protéger les interfaces réseau contre les connexions externes non autorisées.
#
# 3. **DISA STIG (Defense Information Systems Agency Security Technical Implementation Guide)** :
#    - **V-204600** : Configurer le pare-feu pour bloquer le trafic non autorisé.
#    - **V-204601** : Autoriser uniquement les services explicitement requis.
#    - **V-204602** : Configurer le pare-feu pour prendre en charge IPv6.

## Fonctionnalités :
# - Installation et activation d'UFW.
# - Configuration des politiques par défaut pour les connexions entrantes et sortantes.
# - Gestion des règles UFW à partir des variables.
# - Activation de la gestion IPv6.
# - Réinitialisation des règles pour éviter les conflits.
# - Validation de l'état du pare-feu après configuration.

## Variables configurables :
# - `ufw_default_policy_incoming` : Politique par défaut pour les connexions entrantes (deny/reject/allow).
# - `ufw_default_policy_outgoing` : Politique par défaut pour les connexions sortantes (deny/reject/allow).
# - `ufw_service_state` : État du service UFW (`enabled` ou `disabled`).
# - `ufw_rules` : Liste des règles UFW à appliquer (ports, protocoles, descriptions).
# - `ufw_ipv6_enabled` : Activer ou désactiver la gestion IPv6 (`true` ou `false`).

---

# Réinitialiser toutes les règles UFW
- name: Réinitialiser toutes les règles UFW
  ansible.builtin.command:
    cmd: ufw reset
  notify: Recharger UFW
  tags:
    - firewall
    - reset

# Activer la gestion IPv6 dans UFW
- name: Activer la gestion IPv6
  ansible.builtin.lineinfile:
    path: /etc/default/ufw
    regexp: '^IPV6='
    line: 'IPV6={{ ufw_ipv6_enabled }}'
  notify: Recharger UFW
  tags:
    - firewall
    - ipv6

# Configurer la politique par défaut
- name: Configurer la politique par défaut pour les connexions entrantes
  ansible.builtin.ufw:
    policy: "{{ ufw_default_policy_incoming }}"
    direction: incoming
  notify: Recharger UFW
  tags:
    - firewall
    - policy

- name: Configurer la politique par défaut pour les connexions sortantes
  ansible.builtin.ufw:
    policy: "{{ ufw_default_policy_outgoing }}"
    direction: outgoing
  notify: Recharger UFW
  tags:
    - firewall
    - policy

# Activer ou désactiver UFW
- name: Activer ou désactiver UFW
  ansible.builtin.service:
    name: ufw
    state: "{{ ufw_service_state }}"
    enabled: true
  tags:
    - firewall
    - state

# Ajouter des règles UFW dynamiques
- name: Appliquer les règles UFW
  ansible.builtin.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    comment: "{{ item.comment }}"
  loop: "{{ ufw_rules }}"
  notify: Recharger UFW
  tags:
    - firewall
    - rules

# Configurer les règles pour le trafic loopback
- name: Autoriser le trafic loopback IPv4
  ansible.builtin.ufw:
    rule: allow
    direction: incoming
    from: 127.0.0.1
    to: 127.0.0.1
    comment: "Autoriser le trafic loopback IPv4"
  notify: Recharger UFW
  tags:
    - firewall
    - loopback

- name: Autoriser le trafic loopback IPv6
  ansible.builtin.ufw:
    rule: allow
    direction: incoming
    from: ::1
    to: ::1
    comment: "Autoriser le trafic loopback IPv6"
  notify: Recharger UFW
  tags:
    - firewall
    - loopback

# Valider l'état du pare-feu
- name: Valider l'état du pare-feu
  ansible.builtin.command:
    cmd: ufw status verbose
  register: ufw_status
  changed_when: false
  tags:
    - firewall
    - validation
